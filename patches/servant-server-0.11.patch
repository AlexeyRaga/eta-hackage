From 1217a959467305088e9f4561c69947069c61a1ea Mon Sep 17 00:00:00 2001
From: Rahul Muttineni <rahulmutt@gmail.com>
Date: Thu, 8 Jun 2017 13:24:11 +0530
Subject: [PATCH] Patched

---
 servant-server.cabal             | 44 ++++++++++----------
 src/Servant.hs                   |  4 +-
 src/Servant/Utils/StaticFiles.hs | 86 ----------------------------------------
 3 files changed, 24 insertions(+), 110 deletions(-)
 delete mode 100644 src/Servant/Utils/StaticFiles.hs

diff --git a/servant-server.cabal b/servant-server.cabal
index 70445d0..a0b7b60 100644
--- a/servant-server.cabal
+++ b/servant-server.cabal
@@ -19,7 +19,7 @@ author:              Servant Contributors
 maintainer:          haskell-servant-maintainers@googlegroups.com
 copyright:           2014-2016 Zalora South East Asia Pte Ltd, Servant Contributors
 category:            Servant Web
-build-type:          Custom
+build-type:          Simple
 cabal-version:       >=1.10
 tested-with:         GHC >= 7.8
 extra-source-files:
@@ -31,11 +31,11 @@ source-repository head
   type: git
   location: http://github.com/haskell-servant/servant.git
 
-custom-setup
-  setup-depends:
-    base >= 4 && <5,
-    Cabal,
-    cabal-doctest >= 1.0.1 && <1.1
+-- custom-setup
+--   setup-depends:
+--     base >= 4 && <5,
+--     Cabal,
+--     cabal-doctest >= 1.0.1 && <1.1
 
 library
   exposed-modules:
@@ -49,7 +49,7 @@ library
     Servant.Server.Internal.Router
     Servant.Server.Internal.RoutingApplication
     Servant.Server.Internal.ServantErr
-    Servant.Utils.StaticFiles
+    -- Servant.Utils.StaticFiles
   build-depends:
         base               >= 4.7  && < 4.10
       , base-compat        >= 0.9  && < 0.10
@@ -78,8 +78,8 @@ library
       , transformers-base  >= 0.4.4 && < 0.5
       , transformers-compat>= 0.4  && < 0.6
       , wai                >= 3.0  && < 3.3
-      , wai-app-static     >= 3.1  && < 3.2
-      , warp               >= 3.0  && < 3.3
+      -- , wai-app-static     >= 3.1  && < 3.2
+      -- , warp               >= 3.0  && < 3.3
       , word8              >= 0.1  && < 0.2
 
   hs-source-dirs: src
@@ -89,19 +89,19 @@ library
     ghc-options: -Wno-redundant-constraints
   include-dirs: include
 
-executable greet
-  main-is: greet.hs
-  hs-source-dirs: example
-  ghc-options: -Wall
-  default-language: Haskell2010
-  build-depends:
-      base
-    , servant
-    , servant-server
-    , aeson
-    , warp
-    , wai
-    , text
+-- executable greet
+--   main-is: greet.hs
+--   hs-source-dirs: example
+--   ghc-options: -Wall
+--   default-language: Haskell2010
+--   build-depends:
+--       base
+--     , servant
+--     , servant-server
+--     , aeson
+--     , warp
+--     , wai
+--     , text
 
 test-suite spec
   type: exitcode-stdio-1.0
diff --git a/src/Servant.hs b/src/Servant.hs
index ed24756..fd7e045 100644
--- a/src/Servant.hs
+++ b/src/Servant.hs
@@ -7,7 +7,7 @@ module Servant (
   module Servant.Server,
   -- | Utilities on top of the servant core
   module Servant.Utils.Links,
-  module Servant.Utils.StaticFiles,
+  -- module Servant.Utils.StaticFiles,
   -- | Useful re-exports
   Proxy(..),
   throwError
@@ -18,4 +18,4 @@ import           Data.Proxy
 import           Servant.API
 import           Servant.Server
 import           Servant.Utils.Links
-import           Servant.Utils.StaticFiles
+-- import           Servant.Utils.StaticFiles
diff --git a/src/Servant/Utils/StaticFiles.hs b/src/Servant/Utils/StaticFiles.hs
deleted file mode 100644
index 12fa5e4..0000000
--- a/src/Servant/Utils/StaticFiles.hs
+++ /dev/null
@@ -1,86 +0,0 @@
-{-# LANGUAGE CPP #-}
--- | This module defines server-side handlers that lets you serve static files.
---
--- The most common needs for a web application are covered by
--- 'serveDirectoryWebApp`, but the other variants allow you to use
--- different `StaticSettings` and 'serveDirectoryWith' even allows you
--- to specify arbitrary 'StaticSettings' to be used for serving static files.
-module Servant.Utils.StaticFiles
-  ( serveDirectoryWebApp
-  , serveDirectoryWebAppLookup
-  , serveDirectoryFileServer
-  , serveDirectoryEmbedded
-  , serveDirectoryWith
-  , -- * Deprecated
-    serveDirectory
-  ) where
-
-import           Data.ByteString                (ByteString)
-import           Network.Wai.Application.Static
-import           Servant.API.Raw                (Raw)
-import           Servant.Server                 (Server, Tagged (..))
-import           System.FilePath                (addTrailingPathSeparator)
-#if !MIN_VERSION_wai_app_static(3,1,0)
-import           Filesystem.Path.CurrentOS      (decodeString)
-#endif
-import WaiAppStatic.Storage.Filesystem          (ETagLookup)
-
--- | Serve anything under the specified directory as a 'Raw' endpoint.
---
--- @
--- type MyApi = "static" :> Raw
---
--- server :: Server MyApi
--- server = serveDirectoryWebApp "\/var\/www"
--- @
---
--- would capture any request to @\/static\/\<something>@ and look for
--- @\<something>@ under @\/var\/www@.
---
--- It will do its best to guess the MIME type for that file, based on the extension,
--- and send an appropriate /Content-Type/ header if possible.
---
--- If your goal is to serve HTML, CSS and Javascript files that use the rest of the API
--- as a webapp backend, you will most likely not want the static files to be hidden
--- behind a /\/static\// prefix. In that case, remember to put the 'serveDirectoryWebApp'
--- handler in the last position, because /servant/ will try to match the handlers
--- in order.
---
--- Corresponds to the `defaultWebAppSettings` `StaticSettings` value.
-serveDirectoryWebApp :: FilePath -> Server Raw
-serveDirectoryWebApp = serveDirectoryWith . defaultWebAppSettings . fixPath
-
--- | Same as 'serveDirectoryWebApp', but uses `defaultFileServerSettings`.
-serveDirectoryFileServer :: FilePath -> Server Raw
-serveDirectoryFileServer = serveDirectoryWith . defaultFileServerSettings . fixPath
-
--- | Same as 'serveDirectoryWebApp', but uses 'webAppSettingsWithLookup'.
-serveDirectoryWebAppLookup :: ETagLookup -> FilePath -> Server Raw
-serveDirectoryWebAppLookup etag =
-  serveDirectoryWith . flip webAppSettingsWithLookup etag . fixPath
-
--- | Uses 'embeddedSettings'.
-serveDirectoryEmbedded :: [(FilePath, ByteString)] -> Server Raw
-serveDirectoryEmbedded files = serveDirectoryWith (embeddedSettings files)
-
--- | Alias for 'staticApp'. Lets you serve a directory
---   with arbitrary 'StaticSettings'. Useful when you want
---   particular settings not covered by the four other
---   variants. This is the most flexible method.
-serveDirectoryWith :: StaticSettings -> Server Raw
-serveDirectoryWith = Tagged . staticApp
-
--- | Same as 'serveDirectoryFileServer'. It used to be the only
---   file serving function in servant pre-0.10 and will be kept
---   around for a few versions, but is deprecated.
-serveDirectory :: FilePath -> Server Raw
-serveDirectory = serveDirectoryFileServer
-{-# DEPRECATED serveDirectory "Use serveDirectoryFileServer instead" #-}
-
-fixPath :: FilePath -> FilePath
-fixPath =
-#if MIN_VERSION_wai_app_static(3,1,0)
-    addTrailingPathSeparator
-#else
-    decodeString . addTrailingPathSeparator
-#endif
-- 
2.7.4 (Apple Git-66)

